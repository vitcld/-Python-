# -*- coding: utf-8 -*-
"""pandas_CC_D2_victor.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1qyrMVNiLML5SyuAasj8UejQesr7_kpIF

#Manipulação de dados com Pandas - Estrtura de dados com POO

Documentação disponivel: https://pandas.pydata.org/docs/
"""

#criando dataframe a partir de uma lista de tuplas
import pandas as pd #importa a biblioteca Pandas
nomes = ['Lara', 'Victor', 'Cleslley', 'Cesar']
idades = [20, 20, 20, 19]
dados = list(zip(nomes, idades))
#print(dados)
#[('Lara', 20), ('Victor', 20), ('Cleslley', 20), ('Cesar', 19)]
df = pd.DataFrame(data = dados)
print(df)

#criando dataframe a partir de um dicionário
import pandas as pd
dados = {'Nome': ['Lara', 'Victor', 'Cleslley', 'Cesar', 'Azedo', 'Vasco', 'Enzo'], 'Idade': [20, 20, 20, 19, 21, 21, 18]}
df = pd.DataFrame(data = dados)
print(df)

#criando um dataframe com rótulos personalizados
import pandas as pd
dados = [('Lara', 20), ('Victor', 20), ('Cleslley', 20), ('Cesar', 19)]
colunas = ['Nome', 'Idades']
linhas = ['A', 'B', 'C', 'D']
df = pd.DataFrame(data = dados, columns = colunas, index = linhas)
print(df)

#modificando rótulos de um dataframe
import pandas as pd
dados = [('Lara', 20), ('Victor', 20), ('Cleslley', 20), ('Cesar', 19)]
colunas = ['Nome', 'Idades']
linhas = ['Linda', 'Gartic', 'Kpoper', 'Zerobalao']
df = pd.DataFrame(data = dados, columns = colunas, index = linhas)
print(df)
#atributos de um dataframe
#print(list(df.index)) lista o index (linhas) do dataframe
#print(list(df.columns)) lista as colunas do dataframe
#print(df.ndim) lista o número de colunas
#print(df.shape) mostra as dimensões do dataframe
#print(df.size) mostra o tamanho do dataframe
#print(df.empty) mostra se o dataframe esta vazio

"""#Proposta de Exercicio de DataFrame Dados de músicas de uma plataforma de streaming

"""

import pandas as pd
nomes_musicas = ['Billie Jean', 'Tempo Perdido', 'Vale Vale']
artistas = ['Michaal Jackson', 'Legião Urbana', 'Alok']
generos = ['Pop', 'Rock Nacional', 'Techno']
ano_lancamento = [1985, 1993, 2021]
duracao_minutos = [3.5, 4.2, 3.8]
dados_musicas = {
    'Música': nomes_musicas,
    'Artista': artistas,
    'Gênero': generos,
    'Ano de Lançamento': ano_lancamento,
    'Duração (minutos)': duracao_minutos,
}
musicas_df = pd.DataFrame(data = dados_musicas)
#a)Mais ouvidas
print("a) Mais ouvidas:")
mais_ouvida = musicas_df.loc[musicas_df['Ano de Lançamento'].idxmax()]['Música']
print(mais_ouvida)
print()
#b)Artista com mais músicas
print("b) Artista com mais músicas:")
artista_mais_musicas = musicas_df['Artista'].mode()[0]
print(artista_mais_musicas)
print()
#c)Gênero mais popular
print("c) Gênero mais popular:")
genero_mais_popular = musicas_df['Gênero'].mode()[0]
print(genero_mais_popular)
print()
#d)Música mais recente
print("d) Música mais recente:")
musica_mais_recente = musicas_df.loc[musicas_df['Ano de Lançamento'].idxmax()]['Música']
print(musica_mais_recente)
print()
#e)Adicionar uma nova coluna com a duração em segundos
musicas_df['Duração (segundos)'] = musicas_df['Duração (minutos)'] * 60
print("e) Adicionar uma nova coluna com a duração em segundos")
print(musicas_df)
print()

"""#Proposta de Exercicio de DataFrame Dados de Notas

"""

import pandas as pd

aluno = ["Victor", "Lara", "Cleslley", "Cesar", "Enzo"]
serie = [3, 3, 3, 3, 3]
notaEd1 = [9, 7, 5, 6, 6]
notaEd2 = [10, 9, 7, 10, 8]
notaBd1 = [8, 6, 5, 10, 7]
notaBd2 = [9, 9, 8, 9, 8]
data_nasc_aluno = [2003, 2004, 2003, 2004, 2005]

dados_alunos = {
    'Alunos' : aluno,
    'Serie' : serie,
    'Nota ED 1' : notaEd1,
    'Nota ED 2' : notaEd2,
    'Nota BD 1' : notaBd1,
    'Nota BD 2' : notaBd2,
    'Nascimento' : data_nasc_aluno,
}

estudantes_df = pd.DataFrame(dados_alunos)
print(estudantes_df)
print()

#a)Média de Notas
print("a) Média de notas de Estrutura de Dados: ")
media_notas = (estudantes_df['Nota ED 1'] + estudantes_df['Nota ED 2']) / 2
print(media_notas)
print()
print("Média de notas de Banco de Dados: ")
media_notas = (estudantes_df['Nota BD 1'] + estudantes_df['Nota BD 2']) / 2
print(media_notas)
print()

#b)Aluno com maior nota em Estrutura de Dados
print("b) Aluno com maior nota em Estrutura de Dados: ")
estudantes_df['Média ED'] = (estudantes_df['Nota ED 1'] + estudantes_df['Nota ED 2']) / 2
aluno_maior_nota_ed = estudantes_df.loc[estudantes_df['Média ED'].idxmax()]['Alunos']
print(aluno_maior_nota_ed)
print()
print("Aluno com maior nota em Banco de Dados: ")
estudantes_df['Média BD'] = (estudantes_df['Nota BD 1'] + estudantes_df['Nota BD 2']) / 2
aluno_maior_nota_bd = estudantes_df.loc[estudantes_df['Média BD'].idxmax()]['Alunos']
print(aluno_maior_nota_bd)
print()

#c)Aluno mais novo
print("c) Aluno mais novo: ")
aluno_mais_novo = estudantes_df.loc[estudantes_df['Nascimento'].idxmax()]['Alunos']
print(aluno_mais_novo)
print()

#d)Aluno com menor nota em Banco de Dados
print("d) Aluno com menor nota em Banco de Dados: ")
estudantes_df['Média BD'] = (estudantes_df['Nota BD 1'] + estudantes_df['Nota BD 2']) / 2
aluno_menor_nota_bd = estudantes_df.loc[estudantes_df['Média BD'].idxmin()]['Alunos']
print(aluno_menor_nota_bd)
print()

#e)Adicionar uma nova coluna com a média final das notas import pandas as pd
print("e) Adicionar uma nova coluna com a média final das notas: ")
estudantes_df['Média Final'] = (estudantes_df['Nota ED 1'] + estudantes_df['Nota ED 2'] + estudantes_df['Nota BD 1'] + estudantes_df['Nota BD 2']) / 4
print(estudantes_df)
print()

"""#Exercicio Proposto em Sala (Escola)
Alunos: Victor Claudino, Lara Nunes, Enzo Gabriel
"""

import pandas as pd

aluno = ["Victor", "Lara", "Cleslley", "Cesar", "Enzo"]
serie = ["3 ano", "3 ano", "3 ano", "3 ano", "3 ano"]
notaEd1 = [9, 7, 5, 6, 6]
notaEd2 = [10, 9, 7, 10, 8]
notaBd1 = [8, 6, 5, 10, 7]
notaBd2 = [9, 9, 8, 9, 8]
data_nasc_aluno = [2003, 2004, 2003, 2004, 2005]

dados_alunos = {
    'Alunos' : aluno,
    'Série' : serie,
    'Nota ED 1' : notaEd1,
    'Nota ED 2' : notaEd2,
    'Nota BD 1' : notaBd1,
    'Nota BD 2' : notaBd2,
    'Nascimento' : data_nasc_aluno,
}

estudantes_df = pd.DataFrame(dados_alunos)
print(estudantes_df)
print()

#a)Quantos colunas o DataFrame possui?
print("a)Quantos colunas o DataFrame possui?")
print("O DataFrame possui", estudantes_df.shape[1], "colunas")
print()

#b)Qual é o nome da segunda pessoa da lista?
print("b)Qual é o nome da segunda pessoa da lista?")
print("O nome da segunda pessoa é", estudantes_df.iloc[1][0])
print()

#c)Qual é a média das notas? (Os rótulos podem variar)
print("c)Qual é a média das idades? (Os rótulos podem variar)")
estudantes_df['Média Final'] = (estudantes_df['Nota ED 1'] + estudantes_df['Nota ED 2'] + estudantes_df['Nota BD 1'] + estudantes_df['Nota BD 2']) / 4
print("A média das notas é", estudantes_df['Média Final'].mean())
print()

#d)Qual é a série do quarto indivíduo da lista? (De acordo com o tipo de DataFrame)
print("d)Qual é a série do quarto indivíduo da lista? (De acordo com o tipo de DataFrame)")
print(estudantes_df.iloc[3][1])
print()

#e)Adicione uma nova pessoa ao DataFrame
print("e)Adicione uma nova pessoa ao DataFrame")
nova_pessoa = {'Alunos': "Gabriel",
               'Série': "3 ano",
               'Nota ED 1': 9,
               'Nota ED 2': 9,
               'Nota BD 1': 9,
               'Nota BD 2': 9,
               'Nascimento': 2002}
estudantes_df = pd.concat([estudantes_df, pd.DataFrame(nova_pessoa, index=[5])],ignore_index=True)
print("DataFrame com a nova pessoa")
print(estudantes_df)
print()

#f)Remova a terceira pessoa do DataFrame
print("f)Remova a terceira pessoa do DataFrame")
estudantes_df = estudantes_df.drop(2)
print("DataFrame sem a terceira pessoa")
print(estudantes_df)
print()