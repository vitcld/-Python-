# -*- coding: utf-8 -*-
"""AvaliacaoA1_VictorClaudino_CC_07jun24.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1_w9QDNsdLIANy-X5Z2vL9t0qSKakEttq

#Informações do desenvolvedor


*   Aluno: Victor Claudino Vieira Moura
*   RGM: 34427309

*   Tema: Streaming de Música

*   Instituição: Universidade do Distrito Federal (UDF)
*   Curso: Ciência da Computação


*   Matéria: Estrutura de Dados I

*   Professor(a): Kadidja Valéria
*   Turma: D2

#Avaliação A1 [Tema: Streaming de Música]

#Criação do DataFrame
"""

import pandas as pd
#Criação de várias listas com os dados informados
nomes_musicas = ['Riptide', 'Before I Forget', 'Everlong', 'Take On Me', 'My Way', 'Africa']
artistas = ['Vance Joy', 'Slipknot', 'Foo Fighters', 'A-ha', 'Limp Bizkit', 'Toto']
generos = ['Pop', 'Metal', 'Hard Rock', 'Pop Rock', 'Nu Metal', 'Rock']
ano_lancamento = [2013, 2004, 1997, 1985, 2000, 1982]
duracao_minutos = [3.25, 4.04, 4.11, 3.46, 4.33, 4.55]

#Criação de um dicionário com as listas informadas
dados_musicas = {
    'Música': nomes_musicas,
    'Artista': artistas,
    'Gênero': generos,
    'Ano de Lançamento': ano_lancamento,
    'Duração (minutos)': duracao_minutos,
}

#Criação de um DataFrame com o dicionário
df = pd.DataFrame(dados_musicas)

"""*  Para criação do DataFrame foi utilizado listas e um dicionário com os dados referidos ao tema e assim sendo criado uma variável para o DataFrame.

#1) Apresente em tela (output) toda a base de dados.
"""

#1) Apresente em tela (output) toda a base de dados.
print("1) Apresente em tela (output) toda a base de dados.")
#Utilizar o comando display para apresentar todos os dados do DataFrame
display(df)
print()

"""*   Foi utilizado o comando 'display' para dar output nos dados do DataFrame de forma mais limpa e formatada.

#2) Apresente o tamanho do seu dataframe (quantas linhas x colunas).
"""

print("2) Apresente o tamanho do seu dataframe (quantas linhas x colunas).")
#O comando shape mostrará as dimenções do DataFrame (Linhas e Colunas)
print(df.shape)
print()

"""*   Foi utilizado o comando 'shape' parar mostrar as dimenções do DataFrame, assim revelando a quantidade de linhas e colunas que o DataFrame possui.

#3) Acesse a linha (x) e apresente em tela todas as características do item.
"""

print("3) Acesse a linha (x) e apresente em tela todas as características do item.")
#O comando iloc irá alocar apenas a linha e coluna especificada, neste caso uma linha
print(df.iloc[1])
print()

"""*   Foi utilizado o comando 'iloc' que aloca uma linha e coluna e apresenta apenas os dados contidos nas linhas e colunas selecionadas e alocadas.

#4) Verifique se o DataFrame está vazio.
"""

print("4) Verifique se o dataframe está vazio.")
#O comando empty irá mostrar se o DataFrame está vazio
print(df.empty)
print()

"""*   Foi utilizado o comando 'empty' que refirirá os dados contidos no DataFrame nos mostrando se o mesmo está vazio ou não de forma booleana sendo estes True ou False.

#5) Apresente em tela os 5 primeiros registros da base de dados.
"""

print("5) Apresente em tela os 5 primeiros registros da base de dados.")
#O comando head irá retonar as 5 primeiras linhas do DataFrame
print(df.head)
print()

"""*   Foi utilizado o comando 'head' que retornará apenas as 5 primeiras linhas do DataFrame.

#6) Exclua um item (linha) de sua base de dados.
"""

print("6) Exclua um item (linha) de sua base de dados.")
#O comando drop irá excluir a linha especificada do DataFrame
df = df.drop(5)
print(df)
print()

"""*   Foi utilizado o comando 'drop' que excluirá a linha e coluna especificada do DataFrame.

#7) Adicione um item (linha) na sua base de dados.
"""

print("7) Adicione um item (linha) na sua base de dados.")
#iremos adicionar uma nova linha no nosso DataFrame o adicionando no dicionário
nova_musica = {
    'Música': "Deja Vu",
    'Artista': "Dave Rodgers",
    'Gênero': "Eurobeat",
    'Ano de Lançamento': 1999,
    'Duração (minutos)': 2.59,}
df = pd.concat([df, pd.DataFrame(nova_musica, index=[5])],ignore_index=True)
print(df)
print()

"""*   Foram criados novos dados no dicionário e implementados ao DataFrame sendo estes uma nova música, artista, gênero, ano de lançamento e duração em minutos.

#8) Transponha a coluna para a linha em sua base de dados.
"""

print("8) Transponha a coluna para a linha em sua base de dados.")
#Criar uma variável e aloca-la ao comando T que irá transpor as colunas em linhas
df = pd.DataFrame(dados_musicas)
df_transposto = df.T
print(df_transposto)

"""*   Foi criada uma nova variavél ao Dataframe e com essa variavél foi utilizado o comando 'T' que irá transpor as colunas para se tornarem linhas.

#9) Apresente em tela somente a 1ª e a 2ª coluna (rótulo) da base de dados.
"""

print("9) Apresente em tela somente a 1ª e a 2ª coluna (rótulo) da base de dados.")
#Utilizar novamente o comando iloc definindo as colunas que queremos alocar e apresentar em tela
print(df.loc[:, ['Música', 'Artista']])
print()

"""*   Foi utilizado uma variação do comando 'iloc' sendo este o 'loc'
 que irá alocar os dados do DataFrame pelo seu nome no dicionário e o representar na tela assim facilitando o entendimento.

#10) Informe como foi desenvolvido o Projeto

O desenvolvimento deste projeto centrou-se na criação e manipulação de um DataFrame utilizando a biblioteca Pandas em Python. O tema escolhido foi streaming de música, e para isso, foram definidos dados relevantes como o nome das músicas, os artistas, os gêneros musicais, os anos de lançamento e a duração das músicas em minutos.

Inicialmente, foram criadas listas contendo esses dados. Em seguida, essas listas foram agrupadas em um dicionário, onde cada chave representava uma característica das músicas, como 'Música', 'Artista', 'Gênero', 'Ano de Lançamento' e 'Duração (minutos)'. Esse dicionário foi então utilizado para criar um DataFrame, que é uma estrutura de dados bidimensional com rótulos para as linhas e colunas, fornecida pela biblioteca Pandas.

Ao longo do projeto, diversas operações foram realizadas sobre o DataFrame para responder às perguntas propostas. Utilizamos comandos específicos da biblioteca Pandas, como shape para obter o tamanho do DataFrame, iloc para acessar linhas específicas, empty para verificar se o DataFrame estava vazio, head para apresentar os primeiros registros, e drop para excluir uma linha.

Além disso, realizamos a transposição do DataFrame utilizando o método T, que troca linhas por colunas, e acessamos colunas específicas usando loc. Cada um desses comandos foi escolhido para demonstrar diferentes manipulações possíveis em um DataFrame, facilitando a compreensão e a análise dos dados.

O desenvolvimento do projeto envolveu também a superação de alguns desafios, como a correta aplicação dos comandos e a representação dos dados de forma clara e precisa. Para isso, foi necessária pesquisa adicional e a realização de testes práticos. No final, o projeto proporcionou uma boa compreensão sobre a manipulação de dados com Pandas, além de ilustrar como se pode trabalhar com dados de streaming de música de forma eficiente.
"""